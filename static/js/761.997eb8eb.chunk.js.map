{"version":3,"file":"static/js/761.997eb8eb.chunk.js","mappings":"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","sources":["webpack://boxdelabonita/./src/Pages/Checkout/CheckoutItems/checkoutItems.module.css?08d4","Pages/Checkout/CheckoutItems/checkoutItems.jsx","webpack://boxdelabonita/./src/Components/Modal/modal.module.css?3528","Components/Modal/modal.js","Pages/Checkout/checkout.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"checkoutItemsContainer\":\"checkoutItems_checkoutItemsContainer__No1Am\",\"outerBox\":\"checkoutItems_outerBox__u1X9f\",\"checkoutItemHeader\":\"checkoutItems_checkoutItemHeader__9A4D8\",\"checkoutItemsH3\":\"checkoutItems_checkoutItemsH3__qwq2+\",\"checkoutItems\":\"checkoutItems_checkoutItems__HcMLe\",\"checkoutItem\":\"checkoutItems_checkoutItem__qoNiU\",\"checkoutImgContainer\":\"checkoutItems_checkoutImgContainer__hChbF\",\"checkoutImg\":\"checkoutItems_checkoutImg__GiA7N\",\"checkoutDetailsContainer\":\"checkoutItems_checkoutDetailsContainer__8XjZY\",\"checkoutP\":\"checkoutItems_checkoutP__MeQ+K\",\"hr\":\"checkoutItems_hr__BGy29\",\"totalContainer\":\"checkoutItems_totalContainer__4jYfd\",\"totalItems\":\"checkoutItems_totalItems__bEDXU\",\"totalItem\":\"checkoutItems_totalItem__rlq-h\",\"editOrders\":\"checkoutItems_editOrders__LTtgt\",\"colors\":\"checkoutItems_colors__XHJhj\",\"color\":\"checkoutItems_color__YIWbd\"};","import React, { useEffect } from 'react';\nimport styles from './checkoutItems.module.css';\n\nfunction CheckoutItems({ items, deliveryCharge, totalPrice }) {\n\n    let displayCheckoutItems;\n    if (Object.keys(items).length) {\n        displayCheckoutItems = Object.values(items).map(item => {\n            return <div key={item.product._id} className={styles.checkoutItem}>\n                <div className={styles.checkoutImgContainer}>\n                    <img src={Object.values(item.product.img)[0]} alt={item.product.title} className={styles.checkoutImg} />\n                </div>\n                <div className={styles.checkoutDetailsContainer}>\n                    <p className={styles.checkoutP}>{item.product.title}</p>\n                    <p className={styles.checkoutP}>{item.quantity} x ${item.price}</p>\n                    <p className={styles.checkoutP}>&#2547;{item.quantity * item.price}</p>\n                    <div className={styles.colors}>{item.color.length ? item.color.map((clr, idx) => <span key={idx} className={styles.color} style={{backgroundColor: `${clr}`}}></span>) : null}</div>\n                </div>\n            </div>\n        })\n    }\n    else {\n        displayCheckoutItems = <h4>No items</h4>\n    }\n\n    return (\n        <div className={styles.checkoutItemsContainer}>\n            <div className={styles.checkoutItemHeader}>\n                <h3 className={styles.checkoutItemsH3}>Order Summary</h3>\n                <span className={styles.editOrders} onClick={() => window.location.assign('/view-cart')}>(Edit)</span>\n            </div>\n            <div className={styles.outerBox}>\n                <div className={styles.checkoutItems}>\n                    {displayCheckoutItems}\n                </div>\n            </div>\n            <div className={styles.outerBox}>\n                <div className={styles.totalContainer}>\n                    <div className={styles.totalItems}>\n                        <span className={styles.totalItem}>Subtotal:</span>\n                        <span className={styles.totalItem}>&#2547;{totalPrice}</span>\n                    </div>\n                    <div className={styles.totalItems}>\n                        <span className={styles.totalItem}>Shipping:</span>\n                        <span className={styles.totalItem}>&#2547;{deliveryCharge}</span>\n                    </div>\n                    <div className={styles.totalItems}>\n                        <span className={styles.totalItem}>Total:</span>\n                        <span className={styles.totalItem}>&#2547;{totalPrice + deliveryCharge}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CheckoutItems\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal_modal__KtSWS\"};","import React from 'react';\nimport ReactDom from 'react-dom';\nimport styles from './modal.module.css';\n\nconst Modal = ({ modal, children }) => {\n    //if modal is false then abort\n    if (!modal) return modal;\n\n    return ReactDom.createPortal(\n    <div className={styles.modal}>\n        {children}\n    </div>,\n    document.getElementById('portal'));\n}\n\nexport default Modal;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport './checkout.css';\nimport CheckoutItems from './CheckoutItems/checkoutItems';\nimport flag from '../../Assets/Others/flag.png';\nimport Spinner from '../../Components/Spinner/spinner';\nimport Backdrop from '../../Components/Backdrop/backdrop';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport Modal from '../../Components/Modal/modal';\nimport { disableScroll } from '../../Utilities/utilities';\nimport { fetchCartItem } from '../../Utilities/utilities';\n\n//this component fetch the products from contextApi\n//display the products\n//takes the user information and then finally place the order by making a http request\nfunction Checkout() {\n    \n    const [products, setProducts] = useState({});\n    const [spinner, setSpinner] = useState(false);\n    const [backdrop, setBackdrop] = useState(false);\n    const [modal, setModal] = useState(false);\n    const [name, setName] = useState('');\n    const [address, setAddress] = useState('');\n    const [email, setEmail] = useState('');\n    const [emailValidity, setEmailValidty] = useState(true)\n    const [phone, setPhone] = useState('');\n    const [phoneValidity, setPhoneValidity] = useState(true);\n    const [city, setCity] = useState('Select Area');\n    const [paymentMethod, setPaymentMethod] = useState('');\n    const [btnDisable, setBtnDisable] = useState(true);\n    const [totalPrice, setTotalPrice] = useState(0);\n    const [deliveryCharge, setDeliveryCharge] = useState(0);\n\n    const [placeOrderStatus, setPlaceOrderStatus] = useState('');\n    const [placeOrderDetails, setPlaceOrderDetails] = useState(null);\n    //this hook execute on component mount and fetch the products from context\n    //calculate the total price and store the products in products variable\n    useEffect(() => {\n        const product = fetchCartItem();\n        if (Object.keys(product).length){\n            let itemTotalPrice = 0;\n            Object.values(product).forEach(item => itemTotalPrice += (item.quantity * item.price))\n            setTotalPrice(itemTotalPrice);\n        }\n        setProducts(product);\n    }, []);\n    //this hook validate the email from user input. if email is correct form then\n    //it set the emailValidity to true\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (email) {\n                //checking if input contains a '@'\n                const check1 = email.includes('@');\n                //checking if the user input contains a '.com'\n                const check2 = email.includes('.com');\n                //input contains both '@' and '.com'then we move forward to the domain validation\n                if (check1 && check2){\n                    //checking whether any letter is present between the '@' and '.com'\n                    //if any letter is present between '@' and '.com' then we know that there is a domain name\n                    const domain = email.slice(email.indexOf('@') + 1, email.indexOf('.com'));\n                    //i domain is present then we set the emailValidity to true\n                    if (domain.length > 0){\n                        setEmailValidty(true);\n                    }\n                }\n                //otherwise we set it to true\n                else {\n                    setEmailValidty(false);\n                }\n            }\n        //we delay the the validation after 1200ms so it does not execute immidiately\n        }, 1200)\n        //clearing the timeout\n        return () => clearTimeout(timer);\n    }, [email]);\n    //this hook validate the phone number form user input\n    useEffect(() => {\n        //we validate the phone number by checking if the input length is equal to 11 \n        const phoneTimer = setTimeout(() => {\n            if (phone){\n                phone.length === 11 ? setPhoneValidity(true) : setPhoneValidity(false);\n            }\n        //we delay it to 1200ms so it does not execute immidiately\n        }, 1200)\n        //clearing the timer\n        return () => clearTimeout(phoneTimer);\n    }, [phone])\n    //this hook is the final validation process where if all input is correct then it enable the 'Order Now' button\n    //where user can actually place the orders\n    useEffect(() => {\n        //setting the Order Now button enable\n        if (name && address && phone && city !== 'Select Area' && paymentMethod && Object.keys(products).length){\n            setBtnDisable(false);\n        }\n        //setting the Order Now button disable\n        else {\n            setBtnDisable(true);\n        }\n    }, [name, address, email, city, emailValidity, phone, paymentMethod]);\n    //this hook toggle the scroll disability when backdrop is on/off respectively\n    useEffect(() => {\n        if (backdrop){\n            disableScroll();\n        }\n        else {\n            window.onscroll = () => {}\n        }\n    }, [backdrop]);\n    \n    //this function handle the http request, send the informations to the server and get the reply\n    const submitHandler = async (e) => {\n        //preventing reloading\n        e.preventDefault();\n        //enabling the backdrop and spinner\n        setBackdrop(true);\n        setSpinner(true);\n        //make a http request and handle the response\n        await fetch(`${process.env.REACT_APP_BASE_URI}/place-order`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name, address, email, phone, city, paymentMethod, totalPrice, deliveryCharge, products\n            })\n        })\n        .then(res => res.json())\n        .then(data => {\n            setSpinner(false);\n            setBackdrop(true);\n            setPlaceOrderStatus(data.status);\n            setPlaceOrderDetails(data.data)\n            setModal(true);\n            //if the return status is successfull then we clear the user cart item\n            localStorage.removeItem('cart');\n        })\n        .catch(err => {\n            console.log(err);\n            setSpinner(false);\n            setBackdrop(true);\n            setPlaceOrderStatus('server error');\n        });\n    }\n    //we store the status message in displayStatusMsg variable if there is any and display to te screen\n    let displayStatusMsg = null;\n\n    if (placeOrderStatus === 'success'){\n        displayStatusMsg = <div className='place-order-container'>\n            <div className='place-order-header'>\n                <div className='place-order-icon-container'>\n                    <FontAwesomeIcon icon={faCheck} className='place-order-icon' />\n                </div>\n                <div className='place-order-details-container'>\n                    <h2 className='place-order-details-h2'>Order Placed</h2>\n                    <p className='place-order-details-p'>Your order has been placed successfully</p>\n                    <p className='place-order-details-p'>You can see the status of the order at any time</p>\n                </div>\n            </div>\n            <hr className='hr-line'/>\n            <div className='place-order-footer'>\n                <div className='place-order-footer-row'>\n                    <div className='place-order-footer-column'>\n                        <h3 className='place-order-details-h3'>Date</h3>\n                        <p className='place-order-details-p'>{placeOrderDetails.date}</p>\n                    </div>\n                    <div className='place-order-footer-column right-column'>\n                        <h3 className='place-order-details-h3'>Order Id</h3>\n                        <p className='place-order-details-p'>{placeOrderDetails.orderId}</p>\n                    </div>\n                </div>\n                <div className='place-order-footer-row'>\n                    <div className='place-order-footer-column'>\n                        <h3 className='place-order-details-h3'>Shipping To</h3>\n                        <p className='place-order-details-p'>{address}</p>\n                    </div>\n                    <div className='place-order-footer-column right-column'>\n                        <h3 className='place-order-details-h3'>Payment Method</h3>\n                        <p className='place-order-details-p'>{paymentMethod}</p>\n                    </div>\n                </div>\n            </div>\n            <button className='place-order-btn' onClick={() => window.location.assign(`/profile/track/${phone}`)}>Done</button>\n        </div>\n    }\n\n    return (\n        <>\n        <Backdrop backdrop={backdrop}/>\n        <Spinner spinner={spinner}/>\n        <Modal modal={modal}>\n            {displayStatusMsg}\n        </Modal>\n        <section className='checkout-container-main'>\n            <div className='checkout-container'>\n                <div className='payment-container'>\n                    <h3 className='checkout-h3'>Payment Details</h3>\n                    <form className='payment-form' onSubmit={submitHandler}>\n                        <fieldset className='payment-form-filedset'>\n                            <input type='text'\n                                   data-testid='full-name'\n                                   placeholder='Full Name'\n                                   className='payment-form-input'\n                                   value={name}\n                                   onChange={(e) => setName(e.target.value)}/>\n                        </fieldset>\n                        <fieldset className='payment-form-filedset'>\n                            <input type='text'\n                                   data-testid='full-address'\n                                   placeholder='Full Address'\n                                   className='payment-form-input'\n                                   value={address}\n                                   onChange={(e) => setAddress(e.target.value)}/>\n                        </fieldset>\n                        <fieldset className={emailValidity ? 'payment-form-filedset' : 'payment-form-filedset wrong-input'}>\n                            <input type='email'\n                                   data-testid='email'\n                                   placeholder='Email'\n                                   className='payment-form-input'\n                                   value={email}\n                                   onChange={(e) => setEmail(e.target.value)}/>\n                        </fieldset>\n                        <fieldset className={phoneValidity ? 'payment-form-filedset' : 'payment-form-filedset wrong-input'}>\n                            <div className='flag-container'>\n                                <img src={flag} className='flag'/>\n                                <span className='country-code'>+88</span>\n                            </div>\n                            <input type='number'\n                                   data-testid='phone-number'\n                                   placeholder='Phone Number'\n                                   className='payment-form-input phone'\n                                   value={phone}\n                                   onChange={(e) => setPhone(e.target.value)}/>\n                        </fieldset>\n                        <fieldset className='payment-form-filedset'>\n                            <select data-testid='delivery-location' className='payment-select' value={city} onChange={(e) => {\n                                if (e.target.value === 'Inside Dhaka ৳80'){\n                                    setCity(e.target.value);\n                                    setDeliveryCharge(80);\n                                }\n                                else {\n                                    setCity(e.target.value);\n                                    setDeliveryCharge(150);\n                                }\n                            }}>\n                                <option disabled className='payment-option'>Select Area</option>\n                                <option className='payment-option'>Inside Dhaka &#2547;80</option>\n                                <option className='payment-option'>Outside Dhaka &#2547;150</option>\n                            </select>\n                        </fieldset>\n                        <section className='payment-method-main'>\n                            <h3 className='payment-h3'>Payment Method</h3>\n                            <div className='payment-form-group'>\n                                <fieldset className='payment-form-filedset payment'>\n                                    <input data-testid='payment-method' id=\"cod\" type='radio' name='payment-method' className='paymet-method' value='Cash on delivery' onChange={(e) => setPaymentMethod(e.target.value)}/>\n                                    <label htmlFor='cod' className='payment-form-label'>Cash on Delivery</label>\n                                </fieldset>\n                                <fieldset className='payment-form-filedset payment'>\n                                    <input data-testid='payment-method' id='bkash' type='radio' name='payment-method' className='paymet-method' value='bkash' onChange={(e) => setPaymentMethod(e.target.value)}/>\n                                    <label htmlFor='bkash' className='payment-form-label'>Bkash</label>\n                                </fieldset>\n                            </div>\n                        </section>\n                        <button type='submit'\n                                className='submit-btn'\n                                disabled={btnDisable}\n                                >Order Now</button>\n                    </form>\n                </div>\n                <div className='vertical-line'></div>\n                <div className='item-container'>\n                    <CheckoutItems items={products} deliveryCharge={deliveryCharge} totalPrice={totalPrice} />\n                </div>\n            </div>\n        </section>\n        </>\n    )\n}\n\nexport default Checkout;\n"],"names":["_ref","displayCheckoutItems","items","deliveryCharge","totalPrice","Object","keys","length","values","map","item","_jsxs","className","styles","children","_jsx","src","product","img","alt","title","quantity","price","color","clr","idx","style","backgroundColor","concat","_id","onClick","window","location","assign","modal","ReactDom","document","getElementById","_useState","useState","_useState2","_slicedToArray","products","setProducts","_useState3","_useState4","spinner","setSpinner","_useState5","_useState6","backdrop","setBackdrop","_useState7","_useState8","setModal","_useState9","_useState10","name","setName","_useState11","_useState12","address","setAddress","_useState13","_useState14","email","setEmail","_useState15","_useState16","emailValidity","setEmailValidty","_useState17","_useState18","phone","setPhone","_useState19","_useState20","phoneValidity","setPhoneValidity","_useState21","_useState22","city","setCity","_useState23","_useState24","paymentMethod","setPaymentMethod","_useState25","_useState26","btnDisable","setBtnDisable","_useState27","_useState28","setTotalPrice","_useState29","_useState30","setDeliveryCharge","_useState31","_useState32","placeOrderStatus","setPlaceOrderStatus","_useState33","_useState34","placeOrderDetails","setPlaceOrderDetails","useEffect","fetchCartItem","itemTotalPrice","forEach","timer","setTimeout","check1","includes","check2","slice","indexOf","clearTimeout","phoneTimer","disableScroll","onscroll","displayStatusMsg","FontAwesomeIcon","icon","faCheck","date","orderId","_Fragment","Backdrop","Spinner","Modal","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","fetch","process","method","headers","body","JSON","stringify","then","res","json","data","status","localStorage","removeItem","catch","err","console","log","stop","apply","arguments","type","placeholder","value","onChange","target","flag","disabled","id","htmlFor","CheckoutItems"],"sourceRoot":""}