{"version":3,"file":"static/js/330.e1aaaca8.chunk.js","mappings":"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","sources":["webpack://boxdelabonita/./src/Components/AddToBagBtn/addToBagBtn.module.css?fb36","Components/AddToBagBtn/addToBagBtn.jsx","webpack://boxdelabonita/./src/Pages/Cart/cart.module.css?7f7f","webpack://boxdelabonita/./src/Components/RemoveAllProductsBtn/removeAllProducts.module.css?8d4c","Components/RemoveAllProductsBtn/removeAllProductsBtn.jsx","Pages/Cart/cart.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"addToBagBtn\":\"addToBagBtn_addToBagBtn__5Ujmb\"};","import React, { useContext, useState } from 'react';\nimport ContextApi from '../ContextApi/contextApi';\nimport styles from './addToBagBtn.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { toast } from 'react-toastify';\nimport { addToCart } from '../../Utilities/utilities';\n\n//this is a button component that add an item to the localStorage and take these following props:\n//disable: a property to indicate whether the button should be disabled or not\n//product: the product that need to add to the localStorage\n//title: the text of the button\n//color: the color of the item\nconst AddToBagBtn = ({ disable, product, title, color }) => {\n    //extracting the setAddItem from the context object because:\n    //Since we store the user added item to localStorage and adding item to localStorage doesn't rerender.\n    //that's why declare a counter variable \"addItem\" to App component and everytime user add or remove an item from the cart\n    //we increment or decrement the value so the App component rerender and so its child and we get the latest value from localStorage\n    //see line 27 in App component for reference\n    const setItemCount = useContext(ContextApi).setAddItem;\n    //declaring a varibale with value false so the the button doesn't show the spinner initially\n    //and when user click the \"Add to Cart\" button this variale value change to true so the button show the spinner\n    const [isLoading, setIsLoading] = useState(false);\n    \n    //declaring a function to add item to the cart\n    const submitHandler = async () => {\n        //it shows the spinner initially when the submitHandler function is triggered so\n        //the user knows that the process has begun\n        setIsLoading(true);\n        //if no text for the button is provided then we abort the process.\n        if (!product.title){\n            //deactivate the spinner\n            setIsLoading(false);\n            //show a message to the display that the process has failed, meaning something is wrong.\n            return toast.error('Failed', {style: {textTransform: 'capitalize', fontWeight: '600'}});\n        }\n\n        //if no color is provided then we abort\n        if (!color){\n            //deactivate the spinner\n            setIsLoading(false);\n            //show a prompt to choose a color.\n            return toast.info('Please Select a Color', {style: {backgroundColor: '#067FD0', textTransform: 'capitalize', fontWeight: '600'}});\n        }\n        //after executing the addToCart function, it returns a string as status whether it succeed or not\n        const status = addToCart(product, color);\n        //if item adding item is successfull then we do the following:\n        if (status === 'success'){\n            //deactivate the spinner\n            setIsLoading(false);\n            //show a successfull message that item was added\n            toast.success(`${product.title} added to cart`, {style: {backgroundColor: '#4b7d37', textTransform: 'capitalize', fontWeight: '600'}})\n            //incrementing the value of addItem variable.\n            //If its not clear why did we increment this variable then read line no 15 of this file or App component line no 27\n            setItemCount(addItem => addItem+1);\n        }\n        //if its failed\n        else {\n            //deactivate the spinner\n            setIsLoading(false);\n            //show a message that operation failed\n            toast.error(`${status}`, {style: {fontWeight: '600', textTransform: 'capitalize'}});\n        }\n    }\n\n    return (\n        <>\n        <button disabled={!disable} className={styles.addToBagBtn} onClick={submitHandler}>\n            {\n                isLoading ?\n                <FontAwesomeIcon data-testid=\"spinner\" icon={faSpinner} spinPulse className={styles.loader}/>\n                :\n                <span className={styles.btn}>{title}</span>\n            }\n        </button>\n        </>\n    )\n}\n\nexport default AddToBagBtn;\n","// extracted by mini-css-extract-plugin\nexport default {\"cartContainerMain\":\"cart_cartContainerMain__Rlofx\",\"cartContainer\":\"cart_cartContainer__ePzRj\",\"cartItemContainer\":\"cart_cartItemContainer__SJFIE\",\"cartLabels\":\"cart_cartLabels__3rXYP\",\"cartLabel\":\"cart_cartLabel__JxZrC\",\"cartItemElements\":\"cart_cartItemElements__O1SY6\",\"cartItemElement\":\"cart_cartItemElement__VyB5C\",\"cartItemImgContainerMain\":\"cart_cartItemImgContainerMain__ZI-YC\",\"cartItems\":\"cart_cartItems__uTLyY\",\"cartItem\":\"cart_cartItem__geCgB\",\"cartImgContainer\":\"cart_cartImgContainer__rW8P2\",\"cartImg\":\"cart_cartImg__MFylJ\",\"cartInfoContainer\":\"cart_cartInfoContainer__pwBSi\",\"cartTitle\":\"cart_cartTitle__+eC6a\",\"colorContainer\":\"cart_colorContainer__rw9L+\",\"colors\":\"cart_colors__mxMjV\",\"quantityBtn\":\"cart_quantityBtn__jlSkc\",\"quantityCount\":\"cart_quantityCount__pGug+\",\"subtotal\":\"cart_subtotal__2791r\",\"cartDetailsContainer\":\"cart_cartDetailsContainer__tZCtZ\",\"couponInputContainer\":\"cart_couponInputContainer__JbwuI\",\"couponInput\":\"cart_couponInput__dFvC0\",\"couponBtn\":\"cart_couponBtn__UAwut\",\"totalContainer\":\"cart_totalContainer__THFza\",\"totalItem\":\"cart_totalItem__LqDun\",\"totalLabel\":\"cart_totalLabel__XajBy\",\"cartFooterContainer\":\"cart_cartFooterContainer__6huap\",\"cartFooterItem\":\"cart_cartFooterItem__+2AjJ\",\"cartFooterImg\":\"cart_cartFooterImg__y25wR\",\"cartFooterBtn\":\"cart_cartFooterBtn__48Fb6\",\"couponContainer\":\"cart_couponContainer__Y3hkY\",\"totalItems\":\"cart_totalItems__DwDdc\"};","// extracted by mini-css-extract-plugin\nexport default {\"removeAllProductsBtn\":\"removeAllProducts_removeAllProductsBtn__M3fzS\"};","import React, { useState } from 'react';\nimport styles from './removeAllProducts.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { toast } from 'react-toastify';\nimport { removeAllProducts } from '../../Utilities/utilities';\n\n//this is a button component which remove all similiar item from the cart and takes the following props:\n//title: the name of the item to remove\n//cb: a callback function. see line 27 in App component for details\nconst RemoveAllProductsBtn = ({ title, cb }) => {\n    //decalring a variable with the value false so the spinner of the button doesn't show initially\n    const [isLoading, setIsLoading] = useState(false);\n    //remove item function\n    const submitHandler = async () => {\n        //activate the spinner initially\n        setIsLoading(true);\n        //executing the 'removeAllProducts' function which returns a text as status message.see line 275 in utilities.js for more info\n        const status = removeAllProducts(title);\n        //if the 'removeSingleItem' function return success\n        if (status === 'success'){\n            //deactivate the spinner\n            setIsLoading(false);\n            //execute the callback function. see line 27 in App component for details\n            cb(addItem => addItem -1);\n            //display a success message to the screen so user knows that the operation was successfull\n            return toast.success(`${title} removed`, {style: {backgroundColor: '#4b7d37', textTransform: 'capitalize', fontWeight: '600'}});\n        }\n        //if the 'removeAllProducts' function return failed\n        else {\n            //deactivate the spinner\n            setIsLoading(false);\n            //display a failed message to the screen so the user knows that operation failed\n            return toast.error(`Failed, try again`, {style: {textTransform: 'capitalize', fontWeight: '600'}});\n        }\n    }\n\n    return (\n        <button className={styles.removeAllProductsBtn} onClick={submitHandler} disabled={!title}>\n            {\n                isLoading ? \n                <FontAwesomeIcon data-testid='spinner' icon={faSpinner} spinPulse className={styles.spinner} />\n                :\n                <span className={styles.btnTitle}>Remove</span>\n            }\n        </button>\n    )\n}\n\nexport default RemoveAllProductsBtn;\n","import React, { useState, useContext, useEffect } from 'react';\nimport ContextApi from '../../Components/ContextApi/contextApi';\nimport styles from './cart.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport bkash from '../../Assets/Others/bkash.png';\nimport visa from '../../Assets/Others/visa.png';\nimport cod from '../../Assets/Others/cod.png';\nimport AddToBagBtn from '../../Components/AddToBagBtn/addToBagBtn';\nimport { Slide, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport RemoveBtn from '../../Components/RemoveSingleItemBtn/removeSingleItemBtn';\nimport RemoveAllProductsBtn from '../../Components/RemoveAllProductsBtn/removeAllProductsBtn';\nimport { fetchCartItem } from '../../Utilities/utilities';\n\nfunction Cart() {\n    //calling useContext so we get the data from the contextApi served from the App component\n    const context = useContext(ContextApi);\n\n    //Since we store the user added item to localStorage and adding item to localStorage doesn't rerender.\n    //that's why declare a counter variable \"addItem\" to App component and everytime user add or remove an item from the cart\n    //we increment or decrement the value so the App component rerender and so its child and we get the latest value from localStorage\n    const toggleItem = context.addItem;\n\n    //declaring a object to store the items that was stored in localStorage so the item can be displayed.\n    const [products, setProducts] = useState({});\n    \n    //decalring a variable so coupon code can be stored\n    const [coupon, setCoupon] = useState('');\n\n    //this hook fetch cart items every time user add or remove an item from the cart so we can display those in the cart page.\n    useEffect(() => {\n        //extracting data from the localStorage and storing them.\n        const product = fetchCartItem();\n        setProducts(product);\n    }, [toggleItem]);\n\n    //calling useNavigate to get the navigate object so user can be redirected as need.\n    const navigate = useNavigate();\n\n    //assigning 0 initially and as the items in the products varible loop through\n    //we add each item's price with the value of this variable so we get a total price amount.\n    let subtotal = 0;\n\n    //assigning null initially so we can later use this variable to:\n    //store the items that return from the products array map method or\n    //if there is no items in the products object then we leave it null so a \"no item in the cart\" text can be displayed.\n    let cartDisplay = null;\n    \n    //looping through the items of the products object\n    if (Object.keys(products).length){\n        cartDisplay = Object.values(products).map(item => {\n            //taking the item quantity and price and creating a subtotal amount\n            subtotal += item.quantity * item.price;\n            return <div key={item.product._id} className={styles.cartItem}>\n                <div className={styles.cartItemImgContainerMain}>\n                    <div className={styles.cartImgContainer}>\n                        <img src={Object.values(item.product.img)[0]} alt={item.product.title} className={styles.cartImg} />\n                    </div>\n                    <div className={styles.cartInfoContainer}>\n                        <p className={styles.cartTitle}>{item.product.title}</p>\n                        <p className={styles.cartTitle}>Item id: fghy22kl2</p>\n                        <p className={styles.cartTitle}>price: &#2547;{item.price * item.quantity}</p>\n                    </div>\n                </div>\n                <div className={styles.cartItemElements}>\n                    <div className={styles.cartItemElement}>\n                        <div className={styles.colorContainer}>\n                            {\n                                //looping through the colors and displaying to the UI\n                                item.color.length ? \n                                    item.color.map((clr, idx) => <div key={idx} className={styles.colors} style={{backgroundColor: `${clr}`}}></div>)\n                                    :\n                                    <span>No colors</span>\n                            }\n                        </div>\n                    </div>\n                    <div className={styles.cartItemElement}>\n                        <div className={styles.quantityBtn}>\n                            {/*buttn to add more items in the cart*/}\n                            <AddToBagBtn disable={true} title={\"+\"} product={item.product} color={item.color[0]} />\n                        </div>\n                        <div className={styles.quantityCount}>{item.quantity}</div>\n                        <div className={styles.quantityBtn}>\n                            {/*button to remove single item from the cart*/}\n                            <RemoveBtn title={\"-\"} product={item.product} cb={context.setAddItem}/>\n                        </div>\n                    </div>\n                    <div className={styles.cartItemElement}>\n                        <span className={styles.subtotal}>&#2547;{item.price}</span>\n                    </div>\n                    <div className={styles.cartItemElement}>\n                        {/*button to remove all same product*/}\n                        <RemoveAllProductsBtn title={item.product.title} cb={context.setAddItem} />\n                    </div>\n                </div>\n            </div>\n            })\n    }\n    else {\n        //if no item found in the products object\n        cartDisplay = <div>\n            <h4 className={styles.cartH4}>No item in the cart</h4>\n        </div>\n    }\n\n    return (\n        <>\n        <ToastContainer autoClose={1800} hideProgressBar={true} pauseOnHover theme='colored' style={{fontSize: '13px'}} transition={Slide}/>\n        <section className={styles.cartContainerMain}>\n            <div className={styles.cartContainer}>\n                <div className={styles.cartItemContainer}>\n                    <div className={styles.cartLabels}>\n                        <div className={styles.cartLabel}>Products</div>\n                        <div className={styles.cartLabel}>Colors</div>\n                        <div className={styles.cartLabel}>Quantity</div>\n                        <div className={styles.cartLabel}>Subtotal</div>\n                        <div className={styles.cartLabel}>Actions</div>\n                    </div>\n                    <div className={styles.cartItems}>\n                        {cartDisplay}\n                    </div>\n                </div>\n                <div className={styles.cartDetailsContainer}>\n                    <div className={styles.couponContainer}>\n                        <div className={styles.couponInputContainer}>\n                            <input type='text'\n                                   data-testid='coupon-input'\n                                   placeholder=\"Enter coupon code\"\n                                   className={styles.couponInput}\n                                   onChange={(e) => setCoupon(e.target.value)} />\n                            <button disabled={!coupon} className={styles.couponBtn}>Apply coupon</button>\n                        </div>\n                    </div>\n                    <div className={styles.totalContainer}>\n                        <div className={styles.totalItems}>\n                            <div className={styles.totalItem}>\n                                <span className={styles.totalLabel}>Subtotal: &#2547;{subtotal}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.cartFooterContainer}>\n                    <div className={styles.cartFooterItem}>\n                        <img src={visa} alt=\"master card\" className={styles.cartFooterImg} />\n                        <img src={cod} alt=\"cash on delivery\" className={styles.cartFooterImg} />\n                        <img src={bkash} alt=\"bkash\" className={styles.cartFooterImg} />\n                    </div>\n                    <div className={styles.cartFooterItem}>\n                        <button onClick={() => navigate(-1)} className={styles.cartFooterBtn} >Continue Shopping</button>\n                        <button onClick={() => navigate('/checkout')} className={styles.cartFooterBtn} >Checkout</button>\n                    </div>\n                </div>\n            </div>\n        </section>\n        </>\n    )\n}\n\nexport default Cart;\n"],"names":["_ref","_ref2","disable","product","title","color","setItemCount","useContext","ContextApi","setAddItem","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_jsx","_Fragment","children","disabled","className","styles","addToBagBtn","onClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","status","wrap","_context","prev","next","abrupt","toast","error","style","textTransform","fontWeight","info","backgroundColor","addToCart","success","concat","addItem","stop","apply","arguments","FontAwesomeIcon","icon","faSpinner","spinPulse","loader","btn","cb","removeAllProductsBtn","removeAllProducts","spinner","btnTitle","context","toggleItem","products","setProducts","_useState3","_useState4","coupon","setCoupon","useEffect","fetchCartItem","navigate","useNavigate","subtotal","cartDisplay","Object","keys","length","values","map","item","quantity","price","_jsxs","cartItem","cartItemImgContainerMain","cartImgContainer","src","img","alt","cartImg","cartInfoContainer","cartTitle","cartItemElements","cartItemElement","colorContainer","clr","idx","colors","quantityBtn","AddToBagBtn","quantityCount","RemoveBtn","RemoveAllProductsBtn","_id","cartH4","ToastContainer","autoClose","hideProgressBar","pauseOnHover","theme","fontSize","transition","Slide","cartContainerMain","cartContainer","cartItemContainer","cartLabels","cartLabel","cartItems","cartDetailsContainer","couponContainer","couponInputContainer","type","placeholder","couponInput","onChange","e","target","value","couponBtn","totalContainer","totalItems","totalItem","totalLabel","cartFooterContainer","cartFooterItem","visa","cartFooterImg","cod","bkash","cartFooterBtn"],"sourceRoot":""}